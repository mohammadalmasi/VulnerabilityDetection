import os
from pydriller import Repository

# List of GitHub repositories to mine for Python code
repositories = ["https://github.com/numpy/numpy", "https://github.com/django/django", "https://github.com/scikit-learn/scikit-learn", "https://github.com/tensorflow/tensorflow", "https://github.com/keras-team/keras","https://github.com/ansible/ansible", "https://github.com/TheAlgorithms/Python", "https://github.com/pallets/flask", "https://github.com/ytdl-org/youtube-dl", "https://github.com/pandas-dev/pandas", "https://github.com/scrapy/scrapy", "https://github.com/kennethreitz/requests", "https://github.com/home-assistant/home-assistant", "https://github.com/ageitgey/face_recognition","https://github.com/emesik/mamona","https://github.com/progrium/notify-io","https://github.com/phoenix2/phoenix","https://github.com/odoo/odoo","https://github.com/ageitgey/face_recognition","https://github.com/psf/requests","https://github.com/deepfakes/faceswap","https://github.com/XX-net/XX-Net","https://github.com/tornadoweb/tornado","https://github.com/saltstack/salt","https://github.com/matplotlib/matplotlib","https://github.com/celery/celery","https://github.com/binux/pyspider","https://github.com/miguelgrinberg/flasky","https://github.com/sqlmapproject/sqlmap","https://github.com/zulip/zulip","https://github.com/scipy/scipy","https://github.com/bokeh/bokeh","https://github.com/docker/compose","https://github.com/getsentry/sentry","https://github.com/timgrossmann/InstaPy","https://github.com/divio/django-cms","https://github.com/boto/boto"]

# String to accumulate Python source code for training
python_training_corpus = ""

# Loop through each repository URL
for repo_url in repositories:
    print(f"Processing repository: {repo_url}")
    seen_files = set()  # Set to store file paths to ensure uniqueness

    # Traverse all commits in the repository
    for commit in Repository(repo_url).traverse_commits():
        for modified_file in commit.modified_files:
            file_path = modified_file.new_path

            # Check if the file path is valid and is a Python file
            if file_path and file_path.endswith('.py'):
                # Check if the file has not been processed before
                if file_path not in seen_files:
                    source_code = modified_file.source_code

                    # If source code is available, append it to the training corpus
                    if source_code:
                        python_training_corpus += "\n\n" + source_code
                        seen_files.add(file_path)

# File to save the collected Python source code
output_file_path = 'pythontraining.txt'
with open(output_file_path, 'w', encoding='utf-8') as outfile:
    outfile.write(python_training_corpus)

